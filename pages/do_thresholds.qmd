---
title: "Thresholds"
editor_options: 
  chunk_output_type: console
---

```{r, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, dpi = 600, fig.width = 8)

library(here)

source(here("pages/import_data_and_params.R"))

dat_filt <- dat_filt %>% filter(variable == "Dissolved Oxygen")

st_locations <- st_locations %>%
  left_join(do_units, by = "STATION")

# percent saturation data used for threshold analysis
dat_sat <- import_strings_data(input_path = here("pages/data/data-raw")) %>%
  select(COUNTY, WATERBODY, STATION, TIMESTAMP, DEPTH, VARIABLE, VALUE, UNITS) %>%
  mutate(
    COUNTY = if_else(STATION == "Sandy Cove St. Marys", "Digby", COUNTY),
    DEPTH = round(as.numeric(DEPTH)),
    MONTH = month(TIMESTAMP),
    YEAR = year(TIMESTAMP)
  ) %>%
  filter(
    VARIABLE == "Dissolved Oxygen",
    UNITS == "percent saturation",
    !(STATION %in% c("Piper Lake", "Hourglass Lake", "0193", "Sissiboo")),
    !(COUNTY == "Inverness" & DEPTH %in% c(8, 18, 28, 36) & VARIABLE == "Dissolved Oxygen"),
    !(STATION == "Ram Island" &
        TIMESTAMP > as_datetime("2021-10-10")
      & TIMESTAMP < as_datetime("2021-11-15"))
  )

```

Most QC test thresholds for dissolved oxygen were based on historical Coastal Monitoring Program data. Preliminary quality control was applied to the data[^1]. Different thresholds were calculated for data measured in percent saturation and concentration. The number of observations collected and number of counties and stations monitored for each set of units is presented in Table 1. Station locations are shown in @fig-do-station-locations. 

[^1]: e.g., obvious outliers, suspected biofouling, and freshwater stations were omitted. Three deployments in Whycocomagh Basin (Inverness County) measured data near or below the oxycline. This data was also omitted from the thresholds analysis because it is not representative of typical conditions measured by the Program.

<br>

```{r}
dat_filt %>% 
  filter(group == "all_station") %>% 
  group_by(units) %>% 
  summarise(
    `Number of Observations` = sum(n),
    `Number of Counties` = length(unique(county)),
    `Number of Stations` = length(unique(station))
  ) %>% 
  datatable(
    options = list(
      dom = 'ft', 
      searching = FALSE,
      columnDefs = list(list(className = 'dt-center', targets = "_all"))
    ), 
    rownames = FALSE,
    caption = "Table 1: Overview of dissolved oxygen observations used in the thresholds analysis."
  )
```

<br>

```{r, fig-do-station-units}
#| label: fig-do-station-locations
#| fig-height: 7
#| fig-cap: Approximate location of stations with dissolved oxygen data. Marker size is proportional to the number of dissolved oxygen observations within the county. Five counties (Antigonish, Colchester, Pictou, Queens, and Richmond) only have one station with DO data.

# join the station locations dataset with the number of obs from each station
st_locations_units <- st_locations %>% 
  inner_join(
    dat_filt %>% 
      filter(group == "all_station") %>% 
      select(COUNTY = county, STATION = station, n, st_units = units),
     by = c("COUNTY", "STATION")  
  ) %>% 
  group_by(STATION) %>% 
  mutate(n = sum(n)) %>% 
  filter(st_units == "percent saturation") %>% # to remove duplicate rows from different units
  group_by(COUNTY) %>% 
  mutate(
    n_tot = sum(n),
    n_prop = round(n / sum(n), digits = 2),
    popup = paste(COUNTY, STATION, n_prop, sep = "</br>")
  ) %>% 
  ungroup() %>% 
  select(-st_units) 

# interactive map
leaflet(st_locations_units) %>% 
  addProviderTiles(providers$CartoDB.Positron) %>%
  add_circle_markers_county(
    dat = filter(st_locations_units, do_units == "percent saturation"),
    county_pal = county_pal,
    size =  ~n_prop * 25,
    group = "percent saturation"
  ) %>% 
  add_circle_markers_county(
    dat = filter(st_locations_units, do_units == "percent saturation & mg/L"),
    county_pal = county_pal,
    # needed here to keep cols consistent because only 2 counties have concentration
    pal_domain = unique(st_locations_units$COUNTY), 
    size =  ~n_prop * 25,
    group = "percent saturation & mg/L"
  )%>% 
  addLayersControl(
    overlayGroups = c("percent saturation", "percent saturation & mg/L"),
    options = layersControlOptions(collapsed = FALSE)
  ) %>% 
  add_county_fill_legend(county_pal = county_pal)

```

## Gross Range Test

### Sensor Thresholds

The sensor thresholds were determined based on the associated manual (Table 2).

```{r}
sensors %>%
  filter(str_detect(variable, "dissolved_oxygen")) %>%
  mutate(
    units = if_else(sensor_type == "hobo do", "mg / L", "percent saturation"),
    `Sensor (link to spec sheet)` =
      paste0('<a  target=_blank href=', url, '>', sensor_type,'</a>')
  ) %>%
  select( `Sensor (link to spec sheet)`, sensor_min, sensor_max, units) %>%
  datatable(
    options <- list(
      dom = 'ft',
      searching = FALSE,
      columnDefs = list(list(className = 'dt-center', targets = "_all"))
    ),
    rownames = FALSE, escape = FALSE,
    caption = "Table 2: Dissolved oxygen sensor thresholds for the Gross Range Test."
  )
```


### User Thresholds

#### Percent Saturation

```{r}
dat_filt_sat <- dat_filt %>% 
  filter(units == "percent saturation")

county_month_sat <- dat_filt_sat %>% 
  filter(group == "county_month") %>% 
  mutate(month = month(month, label = TRUE))

# county_gr_sat <- county_month_sat %>% 
#   rename(mean_month = mean) %>% 
#   group_by(county) %>%
#   summarise(
#     mean = round(mean(mean_month), digits = 3),
#     stdev = round(sd(mean_month), digits = 3)
#   )
```


A single set of user thresholds was determined for all counties because the DO records were relatively patchy in space and time (@fig-do-station-locations; @fig-do-n-obs-county-month), **and because there was minimal variation between counties (@fig-do-mean-sd)**. For most counties, there were fewer "good" records in the spring and summer months, when conditions are conducive to biofouling[^2]. Several counties have no data for at least one month (@fig-do-n-obs-county-month), and 5 counties only have data from a single station (@fig-do-station-locations). This analysis could be revisited and thresholds revised when there is more consistent data.

[^2]: e.g. more daylight

```{r}
#| label: fig-do-n-obs-county-month
#| fig-height: 12
#| fig-cap: The number of dissolved oxygen observations in each month for each county.

p <- county_month_sat %>% 
  plot_n_obs_month(text_size = 12) +
  theme(panel.spacing.y = unit(15, "lines"))

ggplotly(p)

```



```{r}
#| label: fig-do-mean-sd
#| fig-height: 8
#| fig-cap: The mean and standard deviation of dissolved oxygen (percent saturation) monthly data in each county. 

p <- dat_filt_sat %>% 
  filter(group == "county") %>% 
  plot_mean_sd_county()

ggplotly(p, tooltip = "text")

```



Three grouping methods were used to identify an appropriate mean and standard deviation on which to base the thresholds.

Method 1: the DO observations were grouped by calendar month to give equal weight to each month regardless of the number of observations (as described [here](../pages/temp_thresholds.qmd) for temperature). The average DO for each month was calculated, and the $avg_{DO_{Sat}}$ and $stdev_{DO_{Sat}}$ were calculated from these values. 

Method 2: the DO observations were grouped by county to give equal weight to each county regardless of the number of observations. The average DO for each county was calculated, and the $avg_{DO_{Sat}}$ and $stdev_{DO_{Sat}}$ were calculated from these values.
 
Method 3: $avg_{DO_{Sat}}$ and $stdev_{DO_{Sat}}$ were calculated from all the observations, without any grouping. 

The percent of observations flagged for each set of thresholds was used to inform the final choice of user thresholds.

```{r}

thresh_all <- dat_filt_sat %>% 
  filter(group == "all_data") %>% 
  select(mean, stdev) %>% 
  mutate(user_min = mean - 3 * stdev, user_max = mean + 3 * stdev) 

thresh_month <- dat_filt_sat %>% 
  filter(group == "all_month") %>% 
  rename(mean_month = mean) %>% 
  summarise(mean = mean(mean_month), stdev = sd(mean_month)) %>% 
  mutate(user_min = mean - 3 * stdev, user_max = mean + 3 * stdev) 

thresh_county <- dat_filt_sat %>% 
  filter(group == "county") %>% 
  rename(mean_county = mean) %>% 
  summarise(mean = mean(mean_county), stdev = sd(mean_county)) %>% 
  mutate(user_min = mean - 3 * stdev, user_max = mean + 3 * stdev) 


thresh_summary <- summarise_n_user_flags(dat_sat, thresh_month, group = "Method 1") %>% 
  rbind(
    summarise_n_user_flags(dat_sat, thresh_county, group = "Method 2") 
  ) %>% 
  rbind(
    summarise_n_user_flags(dat_sat, thresh_all, group = "Method 3") 
  ) %>% 
  mutate(across(where(is.numeric), ~round(., 2))) 

rownames(thresh_summary) <- thresh_summary$group
thresh_summary <- select(thresh_summary, -group)

thresh_summary %>% 
  t() %>% 
  datatable(
    options = list(
      dom = 'Bft',
      searching = TRUE,
      columnDefs = list(list(className = 'dt-center', targets = "_all")),
      buttons = c('copy', 'csv')
    ), 
    extensions = 'Buttons', 
    caption = "Table 3: Summary statistics from three different methods of calculating the user thresholds. percent_greater (percent_less) is the percent of observations used in the analysis that are greater (less) than user_max (user_min). percent_flagged is the percent of observations flagged."
  )

```


```{r}
# thresh_all %>% 
#   datatable(
#     options = dt_options, extensions = 'Buttons', 
#     rownames = FALSE,
#     caption = "Table 4: Dissolved oxygen statistics and user thresholds for the Gross Range Test."
#   )
```

<br>

**could say that if normally distributed, would expect xx obs to be flagged**

The mean values for each grouping method were similar, but the standard deviations were not (Table 3). There was limited variability among the monthly means and the county means, resulting in relatively small standard deviations for Methods 1 and 2. This translates into very narrow user thresholds (Table 3; @fig-do-histogram). 

Preliminary quality control was applied to the data used in this analysis, and
`r thresh_summary["Method 1", "percent_flagged"]` % of these observations were still flagged using the Method 1 thresholds[^3]. For some months, these thresholds flag values within within one standard deviation of the monthly mean. This would lead to many "false positive" flags, i.e., observations that are flagged as [Suspect/Of Interest]{style="color: #EDA247;"}, despite being within a reasonable range. 

[^3]: $avg_{DO_{Sat}}$ and $stdev_{DO_{Sat}}$ calculated from monthly means

The standard deviation for Method 3[^4] is nearly twice as large as for the other Methods (Table 3). This leads to broader user thresholds and fewer false positive flags. **Correspond to literature?**. With these threshold values, `r thresh_summary["Method 3", "percent_flagged"]` % of the observations were flagged. 

[^4]: $avg_{DO_{Sat}}$ and $stdev_{DO_{Sat}}$ calculated from all observations 


To minimize the number of false positives, the thresholds based on Method 3 (all observations, ungrouped) will be used in QC analyses (Table 3).

```{r}
#| label: fig-do-histogram
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 2 %; preliminary quality control applied). Observations flagged with the thresholds based on Method 1 are highlighted in light orange and dark orange. Observations flagged using the thresholds based on Method 3 are highlighted in dark orange.

ggplot(dat_sat, aes(VALUE)) +
  annotate(
    "rect", fill = "#EDA247",
    ymin = -Inf, ymax = Inf, alpha = 0.75,
    xmin = -Inf, xmax = thresh_all$user_min
  ) +
  annotate(
    "rect", fill = "#EDA247", alpha = 0.25,
    ymin = -Inf, ymax = Inf,
    xmin = thresh_all$user_min, xmax = thresh_month$user_min
  ) +
    annotate(
    "rect", fill = "#EDA247",
    ymin = -Inf, ymax = Inf, alpha = 0.75,
    xmin = Inf, xmax = thresh_all$user_max
  ) +
  annotate(
    "rect", fill = "#EDA247", alpha = 0.25,
    ymin = -Inf, ymax = Inf,
    xmin = thresh_month$user_max, xmax = thresh_all$user_max
  ) +
  # annotate(
  #   "text", 
  #   x = c(thresh_month$user_min, thresh_month$user_max),
  #   y = 10, 
  #   label = "month", 
  #   color = "red"
  #  # angle = 90
  # ) +
  # 
  geom_histogram(
    aes(y = 100 * after_stat(count / sum(count))),
    binwidth = 2, col = "grey10", fill = "#B0E0E6"
  ) +
  geom_hline(yintercept = 0, colour = "grey10") +
  scale_y_continuous("Percent of Observations", expand = expansion(mult = c(0, 0.1))) +
  scale_x_continuous("Dissolved Oxygen (percent saturation)") +
  theme(
    panel.grid = element_blank(), 
    panel.border = element_rect(colour = "grey10"),
    text = element_text(size = 14)
  )
```

Substantially more observations will be flagged from the raw data[^5]. Some of these should be considered [Of Interest]{style="color: #EDA247;"} (e.g., observations near the oxycline in Inverness, observations at depth in Guysborough), while others should be considered [Suspect]{style="color: #EDA247;"} (e.g., biofouling). Human-in-the-loop review will be required to make these distinctions.

[^5]: data with no preliminary quality control

## Climatology Test

Observations from all counties were pooled to calculate a single set of climatology thresholds (Table 4). The $avg_{season}$ was calculated as the average of all observations in a given month, and $stdev_{season}$ was the associated standard deviation. 

```{r}
clim_thresholds <- dat_filt_sat %>%
  filter(group == "all_month") %>% 
  select(month, n, mean, stdev) %>% 
  mutate(season_min = mean - 3 * stdev, season_max = mean + 3 * stdev)

clim_thresholds %>% 
  select(-n) %>% 
  mutate(
    month = month(month, label = TRUE),
    across(where(is.numeric), ~round(., 2))
  ) %>% 
  datatable(
    options = dt_options, extensions = 'Buttons', 
    rownames = FALSE,
    caption = "Table 4: Seasonal statistics and thresholds for the Climatological test."
  )
```

<br>

For some months the climatology threshold will trigger a [Suspect/Of Interest flag]{style="color: #EDA247;"} before the Gross Range test (e.g., January - April); in other months, the Gross Range test will trigger the flag first (@fig-do-climatology-thresh).

```{r}
#| label: fig-do-climatology-thresh
#| fig-cap: Monthly dissolved oxygen mean +/- 1 standard deviation. Solid orange lines indicate the climatology thresholds; dashed organge lines indicate the grossrange user thresholds.

alpha <- 0.4
fill <- "#EDA247"
col <- "#EDA247"
linewidth <- 1


ggplot(clim_thresholds, aes(month(month, label = TRUE), mean)) +
  geom_ribbon(
    aes(month, ymin = season_min, ymax = season_max), 
    alpha = 0.25, fill = "#009200", col = NA,
  ) +
  geom_ribbon(
    aes(month, ymin = season_max, ymax = Inf),
    alpha = alpha, fill = fill, col = col, linewidth = linewidth
  ) +
  geom_ribbon(
    aes(month, ymin = -Inf, ymax = season_min),
    alpha = alpha, fill = fill, col = col, linewidth = linewidth,
  ) +
  annotate(
    "rect",
    ymin = thresh_all$user_max, ymax = Inf, xmin = 1, xmax = 12,
    alpha = alpha * 1.5,
    fill = fill, col = col, linewidth = linewidth, linetype = 2
  ) +
  annotate(
    "rect",
    ymin = -Inf, ymax = thresh_all$user_min, xmin = 1, xmax = 12,
     alpha = alpha * 1.5,
    fill = fill, col = col, linewidth = linewidth, linetype = 2
  ) +
  geom_point(size = 4, col = "grey20") +
  geom_errorbar(
    aes(ymin = mean - stdev, ymax = mean + stdev),
    width = 0, col = "grey20"
  ) +
  scale_x_discrete("") + 
  scale_y_continuous("Dissolved Oxygen (percent saturation)") +
  theme(text = element_text(size = 14))
  

```










