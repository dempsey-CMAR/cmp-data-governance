{
  "hash": "c1adf8e483d468a70859c5da1b042e86",
  "result": {
    "markdown": "---\ntitle: \"Thresholds\"\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n\n## Rate of Change Test\n\nObservations from all counties were pooled to calculate a single threshold for the rate of change test, $stdev_{max}$.\n\nFirst, $stdev_{roll}$ was calculated for each observation, and the distribution plotted (@fig-do-sd-roll-histogram).\n\n::: panel-tabset\n\n### A\n\n::: {.cell}\n\n```{.r .cell-code}\n# \n# dat_roll <- dat_sat %>% \n#    select(\n#      county = COUNTY,\n#       deployment_range = DEPLOYMENT_PERIOD,\n#       waterbody = WATERBODY,\n#       station = STATION,\n#       sensor = SENSOR,\n#       timestamp_utc = TIMESTAMP,\n#       sensor_depth_at_low_tide_m = DEPTH,\n#       variable = VARIABLE,\n#       value = VALUE\n#     ) %>%\n#   separate(sensor, into = c(\"sensor_type\", \"sensor_serial_number\")) %>% \n#   mutate(variable = \"dissolved_oxygen_percent_saturation\") %>% \n#   ss_pivot_wider() %>%\n#   qc_test_rate_of_change(keep_sd_cols = TRUE) %>% \n#   na.omit()\n# \n# p <- plot_histogram(dat_roll, sd_roll, binwidth = 0.25) +\n#    scale_x_continuous(\"24-hour Standard Deviation (percent saturation)\") \n# \n# ggplotly(p)\n```\n:::\n\n\n### B\n\n::: {.cell}\n\n```{.r .cell-code}\n# p <- dat_roll %>% \n#   filter(sd_roll > 5) %>% \n#   plot_histogram(sd_roll, binwidth = 0.25) +\n#   scale_x_continuous(\n#     \"24-hour Standard Deviation (percent saturation)\",\n#     breaks = seq(5, 15, 1)\n#   ) \n#   \n# ggplotly(p)\n```\n:::\n\n:::\n\n<br>\n\nThe rolling standard deviation for most observations is less than 5. The higher standard deviations are possibly from biofouling signals that were not identified in the preliminary QAQC exercise, which was completed manually. This highlights one advantage of automated quality control, which can flag suspect observations that are more subtle than a human would detect.\n\nBased on @fig-do-sd-roll-histogram, a $stdev_{max}$ of 4 or 5 would be reasonable. \n\n@fig-do-sd-boxplot shows the percent of observations in each deployment that are flagged using a $stdev_{max}$ threshold of of 4 or 5. As expect, the threshold of 4 flags more observations; the next step is to investigate whether the more strict threshold leads to more false positives. This step is in progress.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#\n# roc_flags <- read_csv(\n#   here(\"pages/data/rate_of_change_flags.csv\"),\n#   show_col_types = FALSE\n# ) %>% \n#   mutate(diff = thresh_4 - thresh_5)\n\n# ggplot(roc_flags, aes(thresh_5, thresh_4, col = county)) +\n#   geom_point() +\n#   geom_abline(slope = 1, intercept = 0)\n# \n# ggplot(roc_flags, aes(county, diff)) +\n#   geom_boxplot()\n\n# \n# ggplot(roc_flags, aes(diff)) +\n#   geom_histogram()\n# \n# plot_histogram(roc_flags, diff, binwidth = 1)\n\n# \n# flags_long <- roc_flags %>% \n#   pivot_longer(\n#     cols = c(\"thresh_4\", \"thresh_5\"), \n#     names_to = \"stdev_max\", names_prefix = \"thresh_\", values_to = \"value\"\n#   )\n# \n# ggplot(flags_long, aes(county, value, fill = stdev_max)) +\n#   geom_boxplot(alpha = 0.5) +\n#   scale_fill_manual(values = c(\"#E78AC3\", \"#8DA0CB\") ) +\n#   scale_y_continuous(\"Percent of Observations Flagged as Suspect\") +\n#   scale_x_discrete(\"\") +\n#   theme(\n#     legend.position = c(0.8, 0.8),\n#     legend.box.background  = element_rect(colour = 1, linewidth = 1)\n#   )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# ggplot(flags_long, aes(value, fill = stdev_max)) +\n#   geom_boxplot(alpha = 0.5, orientation = \"y\") +\n#   scale_fill_manual(values = c(\"#E78AC3\", \"#8DA0CB\") )\n```\n:::\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "do_thresholds_roc_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}