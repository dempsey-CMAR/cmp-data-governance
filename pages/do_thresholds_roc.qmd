---
title: "Thresholds"
editor_options: 
  chunk_output_type: console
---

```{r, include=FALSE}
# knitr::opts_chunk$set(echo = FALSE, dpi = 600, fig.width = 8)
# 
# library(here)
# library(plotly)
# library(qaqcmar)
# library(sensorstrings)
# library(summaryplots)
# 
# source(here("pages/import_data_and_params.R"))
# 
# dat_filt <- dat_filt %>% filter(variable == "Dissolved Oxygen")
# 
# st_locations <- st_locations %>%
#   left_join(do_units, by = "STATION")
# 
# # percent saturation data used for threshold analysis
# dat_sat <- import_strings_data(input_path = here("pages/data/data-raw")) %>%
#   # select(COUNTY, WATERBODY, STATION, TIMESTAMP, DEPTH, VARIABLE, VALUE, UNITS) %>%
#   select(-c(LEASE, LATITUDE, LONGITUDE, MOORING)) %>% 
#   mutate(
#     COUNTY = if_else(STATION == "Sandy Cove St. Marys", "Digby", COUNTY),
#     DEPTH = round(as.numeric(DEPTH)),
#     MONTH = month(TIMESTAMP),
#     YEAR = year(TIMESTAMP)
#   ) %>%
#   filter(
#     VARIABLE == "Dissolved Oxygen",
#     UNITS == "percent saturation",
#     !(STATION %in% c("Piper Lake", "Hourglass Lake", "0193", "Sissiboo")),
#     !(COUNTY == "Inverness" & DEPTH %in% c(8, 18, 28, 36) & VARIABLE == "Dissolved Oxygen"),
#     !(STATION == "Ram Island" &
#         TIMESTAMP > as_datetime("2021-10-10")
#       & TIMESTAMP < as_datetime("2021-11-15"))
#   )

```


## Rate of Change Test

Observations from all counties were pooled to calculate a single threshold for the rate of change test, $stdev_{max}$.

First, $stdev_{roll}$ was calculated for each observation, and the distribution plotted (@fig-do-sd-roll-histogram).

::: panel-tabset

### A
```{r}
#| label: fig-do-sd-roll-histogram
#| fig-cap: Distribution of the 24-hour rolling standard deviation of dissolved oxygen observations (binwidth = 0.25 %; preliminary quality control applied). 
# 
# dat_roll <- dat_sat %>% 
#    select(
#      county = COUNTY,
#       deployment_range = DEPLOYMENT_PERIOD,
#       waterbody = WATERBODY,
#       station = STATION,
#       sensor = SENSOR,
#       timestamp_utc = TIMESTAMP,
#       sensor_depth_at_low_tide_m = DEPTH,
#       variable = VARIABLE,
#       value = VALUE
#     ) %>%
#   separate(sensor, into = c("sensor_type", "sensor_serial_number")) %>% 
#   mutate(variable = "dissolved_oxygen_percent_saturation") %>% 
#   ss_pivot_wider() %>%
#   qc_test_rate_of_change(keep_sd_cols = TRUE) %>% 
#   na.omit()
# 
# p <- plot_histogram(dat_roll, sd_roll, binwidth = 0.25) +
#    scale_x_continuous("24-hour Standard Deviation (percent saturation)") 
# 
# ggplotly(p)

```

### B
```{r}
#| label: fig-do-sd-roll-histogram-b
#| fig-cap: Distribution of the 24-hour rolling standard deviation of dissolved oxygen observations (binwidth = 0.25 %; preliminary quality control applied). Filtered to show only standard deviations > 5.

# p <- dat_roll %>% 
#   filter(sd_roll > 5) %>% 
#   plot_histogram(sd_roll, binwidth = 0.25) +
#   scale_x_continuous(
#     "24-hour Standard Deviation (percent saturation)",
#     breaks = seq(5, 15, 1)
#   ) 
#   
# ggplotly(p)

```
:::

<br>

The rolling standard deviation for most observations is less than 5. The higher standard deviations are possibly from biofouling signals that were not identified in the preliminary QAQC exercise, which was completed manually. This highlights one advantage of automated quality control, which can flag suspect observations that are more subtle than a human would detect.

Based on @fig-do-sd-roll-histogram, a $stdev_{max}$ of 4 or 5 would be reasonable. 

@fig-do-sd-boxplot shows the percent of observations in each deployment that are flagged using a $stdev_{max}$ threshold of of 4 or 5. As expect, the threshold of 4 flags more observations; the next step is to investigate whether the more strict threshold leads to more false positives. This step is in progress.


```{r}
#| label: fig-do-sd-boxplot
#| fig-cap: Boxplots of the percent of observations flagged within each deployment, by county, using stdev_max = 4 and stdev_max = 5. 
#
# roc_flags <- read_csv(
#   here("pages/data/rate_of_change_flags.csv"),
#   show_col_types = FALSE
# ) %>% 
#   mutate(diff = thresh_4 - thresh_5)

# ggplot(roc_flags, aes(thresh_5, thresh_4, col = county)) +
#   geom_point() +
#   geom_abline(slope = 1, intercept = 0)
# 
# ggplot(roc_flags, aes(county, diff)) +
#   geom_boxplot()

# 
# ggplot(roc_flags, aes(diff)) +
#   geom_histogram()
# 
# plot_histogram(roc_flags, diff, binwidth = 1)

# 
# flags_long <- roc_flags %>% 
#   pivot_longer(
#     cols = c("thresh_4", "thresh_5"), 
#     names_to = "stdev_max", names_prefix = "thresh_", values_to = "value"
#   )
# 
# ggplot(flags_long, aes(county, value, fill = stdev_max)) +
#   geom_boxplot(alpha = 0.5) +
#   scale_fill_manual(values = c("#E78AC3", "#8DA0CB") ) +
#   scale_y_continuous("Percent of Observations Flagged as Suspect") +
#   scale_x_discrete("") +
#   theme(
#     legend.position = c(0.8, 0.8),
#     legend.box.background  = element_rect(colour = 1, linewidth = 1)
#   )


```


```{r}

# ggplot(flags_long, aes(value, fill = stdev_max)) +
#   geom_boxplot(alpha = 0.5, orientation = "y") +
#   scale_fill_manual(values = c("#E78AC3", "#8DA0CB") )

```

```{r}

```


