---
title: "Thresholds"
editor_options: 
  chunk_output_type: console
---

```{r, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, dpi = 600, fig.width = 8)

library(here)
library(lubridate)
library(plotly)
library(stringr)
library(summaryplots)

source(here("pages/import_data_and_params.R"))
source(here("functions/filter_out_suspect_obs.R"))

st_locations <- st_locations %>%
  left_join(do_units, by = "STATION")

# filter salinity data
dat_sal <- readRDS(here("pages/data/sal_rolling_sd_prelim_qc.rds")) %>%
  select(-c(sensor_type, int_sample, n_sample, rolling_sd_flag_salinity_psu)) %>%
  ss_pivot_longer() %>%
  select(
    COUNTY = county,
    STATION = station,
    DEPLOYMENT_PERIOD = deployment_range,
    TIMESTAMP = timestamp_utc,
    everything()) %>%
  mutate(VARIABLE = "Salinity", UNITS = "PSU") %>%
  filter_out_suspect_obs() %>%
  select(-c(VARIABLE, UNITS)) %>%
  rename(
    county = COUNTY,
    station = STATION,
    deployment_range = DEPLOYMENT_PERIOD,
    timestamp_utc = TIMESTAMP
  ) %>%
  ss_pivot_wider() %>%
  mutate(
    county_sal = if_else(county == "Inverness", "Inverness", "Other"),
    month = month(timestamp_utc, label = TRUE)
  )

#colnames(dat_sal) <- str_remove_all(colnames(dat_sal), "value_")
```

QC test thresholds for salinity were based on historical Coastal Monitoring Program data. Preliminary quality control (QC) was applied to the historical data, when obvious outliers and observations impacted by suspected sensor drift (due to biofouling) were omitted.

Separate thresholds were calculated for salinity measured in Inverness County, and salinity measured elsewhere. **add to this**


# Gross Range Test

## Sensor Thresholds

The sensor thresholds were determined based on the manual for the aquaMeasure SAL (Table 1).

::: panel-tabset

### Table 1

Table 1: Salinity sensor thresholds for the Gross Range Test.
```{r}
sensors %>%
  filter(str_detect(variable, "salinity")) %>%
  mutate(
    `Sensor (link to spec sheet)` =
      paste0('<a  target=_blank href=', url, '>', sensor_type,'</a>')
  ) %>%
  select(`Sensor (link to spec sheet)`, sensor_min, sensor_max) %>%
  datatable(options = dt_options2, rownames = FALSE, escape = FALSE)
```
:::

## User Thresholds

The salinity observations are relatively normally distributed for both groups of data (@fig-sal-hist), and so the mean and standard deviation were used to determine $user_{min}$ and $user_{max}$. The statistics and threshold values are shown in Table 2.

:::panel-tabset

### Figure 1
```{r}
#| warning: false
#| fig-height: 6
#| fig-cap: Distribution of salinity observations (binwidth = 0.5 PSU). Dotted orange lines indicate the user thresholds.
#| label: fig-sal-hist

user_sal <- dat_sal %>% 
  group_by(county_sal) %>% 
  qc_calculate_user_thresholds(
    var = "salinity_psu",
    n_sd = 3, keep_stats = TRUE
  ) %>% 
  pivot_wider(names_from = threshold, values_from = threshold_value) %>% 
  select(county_sal, mean = mean_var, stdev = sd_var, user_min, user_max) 

p <- plot_histogram(
  dat_sal, hist_col = salinity_psu, 
  binwidth = 0.5,
  pal= hist_pal
) +
  scale_x_continuous("Salinity (PSU)") +
  facet_wrap(~county_sal, ncol = 1) +
  geom_vline(
    data = user_sal, aes(xintercept = user_max), linetype = 3, col = "#EDA247"
  ) +
  geom_vline(
    data = user_sal, aes(xintercept = user_min), linetype = 3, col = "#EDA247"
  ) +
  theme_facet_plotly

ggplotly(p, tooltip = "text")
```

### Table 2

Table 2: Gross Range Test statistics and user thresholds for salinity.
```{r}
user_sal %>% 
  rename(county = county_sal) %>% 
  datatable(options = dt_options2, rownames = FALSE)
```
:::

# Climatological Test

The Climatological Test was not applied to the salinity data because there were insufficient observations to calculate robust seasonal thresholds. Both data groups were missing observations for at least one month (@fig-sal-clim). Additionally, there is no substantial seasonal salinity cycle, and so the Gross Range Test is expected to identify any outlying observations.

::: panel-tabset

### Figure 2
```{r}
#| fig-height: 6
#| fig-cap: Mean +/- 3 standard deviations of the monthly salinity observations.
#| label: fig-sal-clim
#| message: false

sal_clim <- dat_sal %>% 
  group_by(county_sal, month) %>% 
  summarise(
    mean = mean(salinity_psu), 
    stdev = sd(salinity_psu)
  ) %>% 
  mutate(
    variable = "salinity_psu",
    season_min = round(mean - 3 * stdev, digits = 3),
    season_max = round(mean + 3 * stdev, digits = 3)
  )

p <- plot_mean_sd_season(sal_clim, n_sd = 3, facet_county = FALSE) +
  scale_y_continuous("salinity (PSU)") +
  facet_wrap(~county_sal, ncol = 1) +
  theme(strip.background = element_rect(color = 1)) +
  theme_facet_plotly
  
ggplotly(p)

```

### Figure 3A
```{r}
#| warning: false
#| fig-height: 10
#| fig-cap:  Seasonal distribution of salinity observations in Inverness County (binwidth = 0.5 PSU). 
#| label: fig-sal-hist-clim-a
#| message: false

p <- dat_sal %>%
  filter(county_sal == "Inverness") %>% 
  plot_histogram(
    hist_col = salinity_psu, binwidth = 0.5,
    pal= hist_pal
  ) +
  scale_x_continuous("Salinity (PSU)") +
  facet_wrap(~month,  ncol = 3) +
  theme_facet_plotly

ggplotly(p, tooltip = "text")
```

### Figure 3B
```{r}
#| warning: false
#| fig-height: 10
#| fig-cap: Seasonal distribution of salinity observations for all counties except Inverness (binwidth = 0.5 PSU). 
#| label: fig-sal-hist-clim-b
#| message: false

p <- dat_sal %>%
  filter(county_sal == "Other") %>% 
  plot_histogram(
    hist_col = salinity_psu, binwidth = 0.5,
    pal= hist_pal
  ) +
  scale_x_continuous("Salinity (PSU)") +
  facet_wrap(~month,  ncol = 3) +
  theme_facet_plotly

ggplotly(p, tooltip = "text")
```

:::

# Spike Test

The distribution of the spike value is skewed right (@fig-sal-spike-dist), and so several upper quartile values (90th, 95th, and 99.7th quartile) were evaluated to use as the $spike_{low}$. 

There were relatively few large single-value spikes in the salinity data, and so the 99.7th quartile was selected to avoid false positives. $spike_{high}$ was defined as 3 * $spike_{low}$ to identify especially egregious spike values.

::: panel-tabset

### Figure 4
```{r}
#| warning: false
#| fig-height: 6
#| fig-cap: Distribution of the spike value of salinity observations (binwidth = 0.1 %). Dotted orange line indicates $spike_{low}$; dotted red line indicates $spike_{high}$.
#| label: fig-sal-spike-dist

spike_thresh <- thresholds %>% 
  filter(variable == "salinity_psu", qc_test == "spike") %>% 
  pivot_wider(names_from = threshold, values_from = threshold_value) %>% 
  mutate(county_sal = if_else(is.na(county), "Other", county))

dat_sp <- dat_sal %>% 
  group_by(county, station, deployment_range, sensor_serial_number) %>%
  dplyr::arrange(timestamp_utc, .by_group = TRUE) %>%
  mutate(
    lag_value = lag(salinity_psu),
    lead_value = lead(salinity_psu),
    spike_ref = (lag_value + lead_value) / 2,
    spike_value = abs(salinity_psu - spike_ref)  
  ) %>% 
  filter(!is.na(spike_value))

p <- dat_sp %>% 
  plot_histogram(hist_col = spike_value, binwidth = 0.1, pal = hist_pal) +
  facet_wrap(~county_sal, ncol = 1) +
  geom_vline(
    dat = spike_thresh, aes(xintercept = spike_low), 
    col = "#EDA247", linetype = 3
  ) +
  geom_vline(
    dat = spike_thresh, aes(xintercept = spike_high), 
    col = "#DB4325", linetype = 3
  ) +
  scale_x_continuous("Salinity (PSU)\nSpike Value") +
  theme_facet_plotly

ggplotly(p, tooltip = "text")

```

### Table 3

Table 3: Spike thresholds for salinity.
```{r}
spike_thresh %>% 
  select(spike_low, spike_high) %>% 
  datatable(options = dt_options2, rownames = FALSE)
```

:::

# Rolling Standard Deviation Test

The distribution of rolling standard deviation is skewed right (@fig-sal-roll-sd-dist), and so several upper quartile values were evaluated to use as the $rolling\_sd\_max$. 

The 90th, 95th, and 99.7th quartile values were each applied to the the raw data (no preliminary QC) and the results inspected. The 90th quartile was determined to be too stringent, as it generated false positives, while The 99.7th quartile was determined to be too lenient, as it resulted in false negatives. The 95th quartile was considered the most useful threshold for both data groups.

::: panel-tabset

### Figure 5
```{r}
#| warning: false
#| fig-height: 6
#| fig-cap: Distribution of the 24-hour rolling standard deviation of salinity observations (binwidth = 0.1 PSU). Dotted orange line indicates $rolling\_sd\_max$.
#| label: fig-sal-roll-sd-dist

sal_roll_sd <- thresholds %>% 
  filter(variable == "salinity_psu", qc_test == "rolling_sd") %>% 
  select(county, threshold, threshold_value) %>% 
  pivot_wider(names_from = threshold, values_from = threshold_value) %>% 
  mutate(county_sal = if_else(is.na(county), "Other", county))

p <- dat_sal %>% 
  filter(!is.na(sd_roll)) %>% 
  plot_histogram(
    hist_col = sd_roll, binwidth = 0.1, pal = hist_pal,
  ) +
  facet_wrap(~county_sal, ncol = 1) +
  geom_vline(
    dat = sal_roll_sd, aes(xintercept = rolling_sd_max), 
    linetype = 3, col = "#EDA247"
  ) +
  scale_x_continuous("Salinity (PSU)\nRolling Standard Deviation") +
  theme_facet_plotly


ggplotly(p, tooltip = "text")

```

### Table 4

Table 4: Rolling standard deviation threshold for salinity.
```{r}
sal_roll_sd %>% 
  datatable(options = dt_options2, rownames = FALSE)
```
:::
