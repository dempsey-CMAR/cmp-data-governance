---
title: "Thresholds"
editor_options: 
  chunk_output_type: console
---

```{r, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, dpi = 600, fig.width = 8)

library(here)

source(here("pages/import_data_and_params.R"))

dat_filt <- dat_filt %>% filter(variable == "Temperature")
```


Most QC test thresholds for temperature were based on historical Coastal Monitoring Program data. Preliminary quality control was applied to this data[^1], leaving observations from `r length(na.omit(unique(dat_filt$station)))` stations in `r length(na.omit(unique(dat_filt$county)))` counties (@fig-temp-station-locations). 

[^1]: e.g., obvious outliers and freshwater stations were omitted

```{r}
#| label: fig-temp-station-locations
#| fig-height: 7
#| fig-cap: Approximate location of stations with temperature data used to inform QC test thresholds. Marker size is proportional to the number of temperature observations within the county.

map_pal <- colorFactor(county_pal, domain = unique(st_locations$COUNTY))
alpha <- 0.65

# join the station locations dataset with the number of obs from each station
st_locations <- st_locations %>% 
  inner_join(
    dat_filt %>% 
      filter(group == "all_station", variable == "Temperature") %>% 
      select(COUNTY = county, STATION = station, n),
    by = c("COUNTY", "STATION") 
  ) %>% 
  group_by(COUNTY) %>% 
  mutate(
    n_tot = sum(n),
    n_prop = round(n / sum(n), digits = 2),
    popup = paste(COUNTY, STATION, n_prop, sep = "</br>")
  ) %>% 
  ungroup()

# interactive map
leaflet(st_locations) %>% 
  addProviderTiles(providers$CartoDB.Positron) %>% 
  addCircleMarkers(
    lng = ~LONGITUDE, lat = ~LATITUDE, weight = 1,
    radius = ~n_prop * 25,
    color = ~map_pal(COUNTY),
    fillColor = ~map_pal(COUNTY),
    popup = ~popup,
    fillOpacity = 0.5
  )  %>% 
  addLegend(
    "bottomright", pal = map_pal, values = ~COUNTY,
    title = "County",
    opacity = alpha
  )
```

## Gross Range Test

### Sensor Min / Max

The sensor thresholds were determined based on the associated manual (Table 1).

```{r}
sensors %>% 
  filter(variable == "temperature_degree_c") %>%
  mutate(
    `Sensor Type (link to manual)` = 
      paste0('<a  target=_blank href=', url, '>', sensor_type,'</a>')
  ) %>% 
  select(`Sensor Type (link to manual)`, sensor_min, sensor_max ) %>%
  distinct() %>% 
  datatable(
    dt_options <- list(
      dom = 'ft',
      searching = FALSE,
      paging = FALSE,
      pageLength = 500,
      columnDefs = list(list(className = 'dt-center', targets = "_all"))
    ), 
    rownames = FALSE, escape = FALSE,
    caption = "Table 1: Temperature gross range thresholds as determined by sensor specifications."
  )
```

### User Min / Max

User thresholds were calculated separately for each county due to expected and observed spatial differences in temperature (@fig-temp-mean-sd).

```{r}
#| label: fig-temp-mean-sd
#| fig-height: 8
#| fig-cap: The mean and standard deviation of temperature in each county.

p <- dat_filt %>% 
  filter(group == "county") %>% 
  plot_mean_sd_county()

ggplotly(p, tooltip = "text")

```

Most counties have substantially different number of observations for different seasons. Because temperature has a clear seasonal cycle, this can weight the average towards months with more observations. To give each month equal weight, the user thresholds were based on the monthly climatology[^3].

[^3]: it was assumed that the different number of days per month was negligible

All temperature observations were first grouped by calendar month, and the average temperature for each month was calculated. The $avg_{Temp}$ was the average of these monthly averages, and $stdev_{Temp}$ was the standard deviation of the monthly averages (@eq-temp-avg, @eq-temp-stdev). With this approach, the mean for a given month will be weighted towards years with more observations than other years for that month. This is not expected to have a substantial influence on the calculated thresholds, but future iterations of this exercise could further standardize the data to account for this.

$$
avg_{temp} = sum(avg_{Jan} + avg_{Feb} + ... avg_{Dec}) / 12
$$ {#eq-temp-avg}

$$
stdev_{temp} = sd(avg_{Jan}, avg_{Feb}, ... avg_{Dec})
$$ {#eq-temp-stdev}

County statistics and user thresholds are presented in Table 2.

```{r}
# calculate thresholds based on the climatology
user_thresh <- dat_filt %>% 
  filter(group == "county_month") %>% 
  rename(mean_month = mean) %>% 
  group_by(county) %>%
  summarise(
    mean = round(mean(mean_month), digits = 3),
    stdev = round(sd(mean_month), digits = 3)
  ) %>% 
  mutate(
    qc_test = "grossrange",
    variable = "temperature_degree_c",
    user_min = mean - 3 * stdev, 
    user_max = mean + 3 * stdev
  ) 

user_thresh %>% 
  select(county, mean, stdev, user_min, user_max) %>% 
  datatable(
    dt_options <- list(
      dom = 'ft',
      searching = FALSE,
      paging = FALSE,
      pageLength = 500,
      columnDefs = list(list(className = 'dt-center', targets = "_all"))
    ), 
    rownames = FALSE,
    caption = "Table 2: Temperature statistics and user thresholds for the Gross Range Test."
  )
```

<br>

The quality[^2] of these user thresholds may vary by county, depending on the number and distribution (in space and time) of observations. For example, there are relatively few observations for some counties compared to others (@fig-temp-n-obs). Cape Breton has the fewest observations at ~30,000 over 3 years and two stations, while Guysborough has the most at nearly 1 million over 7 years and 35 stations (@fig-temp-station-locations). Colchester and Queens counties only have one station each (@fig-temp-station-locations). For consistency, the counties with fewer observations were not pooled with counties with more observations. The user thresholds should be re-evaluated when more observations are collected.

[^2]: e.g., how representative the thresholds are of "normal" conditions through the water column and county

```{r}
#| label: fig-temp-n-obs
#| fig-height: 8
#| fig-cap: The number of dissolved oxygen observations in each county. (Note these numbers are not the same as on the CMAR measurements page because some outlier values and stations were omitted from the thresholds analysis.)

p <- dat_filt %>%
  filter(group == "county") %>% 
  plot_n_obs_county()

ggplotly(p)

```

Calculating thresholds at the county scale provides relatively coarse threshold values. Ideally, these would be resolved by depth and a smaller spatial scale (e.g., waterbody or station). However, calculating thresholds for each county and depth provides its own challenges. The data become very patchy when grouped by county, depth, and month (e.g., 169 month-county-depth combinations with 0 observations). Additionally, the same depth can represent a different part of the water column for different stations. At the Barren Island station in Guysborough county, the 15 m sensor is near the bottom. In contrast, 15 m is in the top 20 % of the water column at Tickle Island, also in Guysborough county. Finally, aggregating thresholds by county and depth would result in 141 user-defined temperature thresholds, which is more than the 2.5 person Data Governance team can reasonably manage.

Because depth was not accounted for, it is expected that observations from very shallow sensors (e.g., <= 2 m) will be assigned the [Suspect/Of Interest]{style="color: #EDA247;"} flag, despite appearing reasonable in the context of the deployment. In this case, the flag should be interpreted as ["Of Interest"]{style="color: #EDA247;"}, for highlighting a relatively warm observation.

The $user_{min}$ threshold is typically << 0 degrees Celsius (Table 2), and is therefore not expected to flag any observations. For most counties (all except Annapolis, Queens, Shelburne, and Digby), the $user_{min}$ is less than the $sensor_{min}$ for the aquameasure and vr2ar sensors. In this case, any observations less than the $sensor_{min}$ would [fail]{style="color: #DB4325;"} the Gross Range Test (i.e., the $user_{min}$ would be ignored). It may be useful for other users to apply their own $user_{min}$ threshold to highlight cold observations that are [Suspect/Of Interest]{style="color: #EDA247;"}. For example, those interested in salmonid aquaculture may wish to flag observations at or near the superchill threshold (-0.7 degree C).

## Climatological Test

The season thresholds were calculated separately for each county due to expected and observed spatial differences in temperature (@fig-temp-climatology).


::: panel-tabset

### A
```{r}
#| label: fig-temp-climatology
#| fig-height: 10
#| fig-cap: The mean and standard deviation of temperature in each county.

county_month <- dat_filt %>% 
  filter(group == "county_month") %>% 
  mutate(month = month(month, label = TRUE)) %>% 
  select(-c(units, group, year, station, depth))

p <- plot_mean_sd_season(county_month, facet_county = TRUE) +
  theme(panel.spacing.y = unit(15, "lines"))

ggplotly(p)

```

### B

```{r}
#| fig-height: 8
#| fig-cap: The mean and standard deviation of temperature in each county.

# p <- ggplot(
#   county_month, aes(month, mean, group = county, col = county)
# ) +
#   geom_point(size = 3) +
#   geom_line(aes(col = county)) +
#   geom_ribbon(
#     aes(ymin = mean - stdev, ymax = mean + stdev, fill = county), 
#     alpha = 0.25, col = NA
#   ) +
#   scale_x_discrete(name = "") +
#   scale_y_continuous("Temperature (mean +/- standard deviation)") +
#   scale_colour_manual(values = getpal(15)) +
#   scale_fill_manual(values = getpal(15)) +
#   guides(fill = "none")
#   
# p
# 
# 
# ggplotly(p)
```
:::



















